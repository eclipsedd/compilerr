static	keyword
int	identifier
cnt	identifier
=	operator
0	integer
;	punctuation
struct	keyword
P	identifier
{	punctuation
int	identifier
x	identifier
,	punctuation
y	identifier
;	punctuation
}	punctuation
;	punctuation
int	identifier
a	identifier
[	punctuation
2	integer
]	punctuation
[	punctuation
3	integer
]	punctuation
=	operator
{	punctuation
{	punctuation
1	integer
,	punctuation
2	integer
,	punctuation
3	integer
}	punctuation
,	punctuation
{	punctuation
4	integer
,	punctuation
5	integer
,	punctuation
6	integer
}	punctuation
}	punctuation
;	punctuation
char	identifier
name	identifier
[	punctuation
]	punctuation
=	operator
"bob"	string
;	punctuation
struct	keyword
P	identifier
*	operator
pp	identifier
=	operator
&	operator
(	punctuation
struct	keyword
P	identifier
)	punctuation
{	punctuation
1	integer
,	punctuation
2	integer
}	punctuation
;	punctuation
if	keyword
(	punctuation
a	identifier
[	punctuation
0	integer
]	punctuation
[	punctuation
1	integer
]	punctuation
>	operator
0	integer
)	punctuation
printf	identifier
(	punctuation
"ok %d\n"	string
,	punctuation
a	identifier
[	punctuation
0	integer
]	punctuation
[	punctuation
1	integer
]	punctuation
)	punctuation
;	punctuation
else	keyword
scanf	identifier
(	punctuation
"%d"	string
,	punctuation
&	operator
a	identifier
[	punctuation
0	integer
]	punctuation
[	punctuation
1	integer
]	punctuation
)	punctuation
;	punctuation
